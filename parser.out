Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> calculadora
Rule 1     calculadora -> operaciones
Rule 2     operaciones -> operacion
Rule 3     operacion -> n1 op n2
Rule 4     n1 -> palabra
Rule 5     n1 -> numero
Rule 6     op -> simbolo
Rule 7     op -> palabra
Rule 8     n2 -> palabra
Rule 9     n2 -> numero
Rule 10    palabra -> pal
Rule 11    simbolo -> suma
Rule 12    simbolo -> resta
Rule 13    simbolo -> divicion
Rule 14    simbolo -> multiplicacion
Rule 15    numero -> num

Terminals, with rules where they appear

divicion             : 13
error                : 
multiplicacion       : 14
num                  : 15
pal                  : 10
resta                : 12
suma                 : 11

Nonterminals, with rules where they appear

calculadora          : 0
n1                   : 3
n2                   : 3
numero               : 5 9
op                   : 3
operacion            : 2
operaciones          : 1
palabra              : 4 7 8
simbolo              : 6

Parsing method: LALR

state 0

    (0) S' -> . calculadora
    (1) calculadora -> . operaciones
    (2) operaciones -> . operacion
    (3) operacion -> . n1 op n2
    (4) n1 -> . palabra
    (5) n1 -> . numero
    (10) palabra -> . pal
    (15) numero -> . num

    pal             shift and go to state 8
    num             shift and go to state 3

    operacion                      shift and go to state 1
    numero                         shift and go to state 2
    operaciones                    shift and go to state 4
    palabra                        shift and go to state 5
    n1                             shift and go to state 6
    calculadora                    shift and go to state 7

state 1

    (2) operaciones -> operacion .

    $end            reduce using rule 2 (operaciones -> operacion .)


state 2

    (5) n1 -> numero .

    suma            reduce using rule 5 (n1 -> numero .)
    resta           reduce using rule 5 (n1 -> numero .)
    divicion        reduce using rule 5 (n1 -> numero .)
    multiplicacion  reduce using rule 5 (n1 -> numero .)
    pal             reduce using rule 5 (n1 -> numero .)


state 3

    (15) numero -> num .

    suma            reduce using rule 15 (numero -> num .)
    resta           reduce using rule 15 (numero -> num .)
    divicion        reduce using rule 15 (numero -> num .)
    multiplicacion  reduce using rule 15 (numero -> num .)
    pal             reduce using rule 15 (numero -> num .)
    $end            reduce using rule 15 (numero -> num .)


state 4

    (1) calculadora -> operaciones .

    $end            reduce using rule 1 (calculadora -> operaciones .)


state 5

    (4) n1 -> palabra .

    suma            reduce using rule 4 (n1 -> palabra .)
    resta           reduce using rule 4 (n1 -> palabra .)
    divicion        reduce using rule 4 (n1 -> palabra .)
    multiplicacion  reduce using rule 4 (n1 -> palabra .)
    pal             reduce using rule 4 (n1 -> palabra .)


state 6

    (3) operacion -> n1 . op n2
    (6) op -> . simbolo
    (7) op -> . palabra
    (11) simbolo -> . suma
    (12) simbolo -> . resta
    (13) simbolo -> . divicion
    (14) simbolo -> . multiplicacion
    (10) palabra -> . pal

    suma            shift and go to state 14
    resta           shift and go to state 13
    divicion        shift and go to state 9
    multiplicacion  shift and go to state 10
    pal             shift and go to state 8

    simbolo                        shift and go to state 12
    palabra                        shift and go to state 11
    op                             shift and go to state 15

state 7

    (0) S' -> calculadora .



state 8

    (10) palabra -> pal .

    suma            reduce using rule 10 (palabra -> pal .)
    resta           reduce using rule 10 (palabra -> pal .)
    divicion        reduce using rule 10 (palabra -> pal .)
    multiplicacion  reduce using rule 10 (palabra -> pal .)
    pal             reduce using rule 10 (palabra -> pal .)
    $end            reduce using rule 10 (palabra -> pal .)
    num             reduce using rule 10 (palabra -> pal .)


state 9

    (13) simbolo -> divicion .

    pal             reduce using rule 13 (simbolo -> divicion .)
    num             reduce using rule 13 (simbolo -> divicion .)


state 10

    (14) simbolo -> multiplicacion .

    pal             reduce using rule 14 (simbolo -> multiplicacion .)
    num             reduce using rule 14 (simbolo -> multiplicacion .)


state 11

    (7) op -> palabra .

    pal             reduce using rule 7 (op -> palabra .)
    num             reduce using rule 7 (op -> palabra .)


state 12

    (6) op -> simbolo .

    pal             reduce using rule 6 (op -> simbolo .)
    num             reduce using rule 6 (op -> simbolo .)


state 13

    (12) simbolo -> resta .

    pal             reduce using rule 12 (simbolo -> resta .)
    num             reduce using rule 12 (simbolo -> resta .)


state 14

    (11) simbolo -> suma .

    pal             reduce using rule 11 (simbolo -> suma .)
    num             reduce using rule 11 (simbolo -> suma .)


state 15

    (3) operacion -> n1 op . n2
    (8) n2 -> . palabra
    (9) n2 -> . numero
    (10) palabra -> . pal
    (15) numero -> . num

    pal             shift and go to state 8
    num             shift and go to state 3

    n2                             shift and go to state 18
    numero                         shift and go to state 16
    palabra                        shift and go to state 17

state 16

    (9) n2 -> numero .

    $end            reduce using rule 9 (n2 -> numero .)


state 17

    (8) n2 -> palabra .

    $end            reduce using rule 8 (n2 -> palabra .)


state 18

    (3) operacion -> n1 op n2 .

    $end            reduce using rule 3 (operacion -> n1 op n2 .)

